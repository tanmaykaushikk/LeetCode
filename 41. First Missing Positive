class Solution {
    public int firstMissingPositive(int[] nums) {
         int n = nums.length;

        // Step 1: Mark numbers <=0 and >n as 1 (since they won't affect our answer)
        for (int i = 0; i < n; i++) {
            if (nums[i] <= 0 || nums[i] > n) {
                nums[i] = n + 1; // Replace non-positive and greater than n numbers with a number > n
            }
        }

        // Step 2: Mark visited elements
        for (int i = 0; i < n; i++) {
            int num = Math.abs(nums[i]);
            if (num <= n) {
                nums[num - 1] = -Math.abs(nums[num - 1]); // Mark the corresponding index as visited
            }
        }

        // Step 3: Find the first positive element
        for (int i = 0; i < n; i++) {
            if (nums[i] > 0) {
                return i + 1;
            }
        }

        // Step 4: If all numbers are present, return n+1
        return n + 1;
    }
}
