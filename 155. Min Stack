import java.util.*;

class MinStack {
    private Stack<Integer> stack;
    private Stack<Integer> minstack;

    public MinStack() {
        stack = new Stack<>();
        minstack = new Stack<>();
        minstack.push(Integer.MAX_VALUE);
    }
    
    public void push(int val) {
        stack.push(val);
        minstack.push(Math.min(minstack.peek(),val));
    }
    
    public void pop() {
         if (!stack.isEmpty()) {
            stack.pop();
            minstack.pop();
        }
    }
    
    public int top() {
        if (!stack.isEmpty()) {
            return stack.peek();
        } else {
            throw new RuntimeException("Stack is empty");
        }
    }
    
    public int getMin() {
       if (!minstack.isEmpty()) {
            return minstack.peek();
        } else {
            throw new RuntimeException("Stack is empty");
        }
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
