class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int start = 1;
        int end = Integer.MIN_VALUE;

        for(int i=0;i<piles.length;i++){
            if(piles[i]>end){
                end=piles[i];
            }
        }

        int ans = -1;
        while(start<=end){
            int mid = start + (end-start)/2;
            if(valid(piles,mid,h)){
                ans = mid;
                end = mid-1;
            }else{
                start = mid+1;
            }
        }
        return ans;
    }

    private static boolean valid(int [] piles, int eatingspeed,int h){
        int timespent = 0;
        for(int i=0;i<piles.length;i++){
            timespent += piles[i]/eatingspeed;
            if(piles[i]%eatingspeed!=0){
                timespent += 1;
            }
            if(timespent>h){
                return false;
            }
        }
        return true;
    }
}
