class Solution {
    public String getPermutation(int n, int k) {
        List<Integer> numbers = new ArrayList<>();
        int[] factorial = new int[n + 1];
        
        // Step 2: Fill the factorial array and number list
        factorial[0] = 1;
        for (int i = 1; i <= n; i++) {
            factorial[i] = factorial[i - 1] * i;
            numbers.add(i);
        }
        
        // Step 3: Decrement k to convert from 1-based index to 0-based
        k--;
        
        // Step 4: Build the permutation string
        StringBuilder result = new StringBuilder();
        for (int i = n; i > 0; i--) {
            int index = k / factorial[i - 1];
            result.append(numbers.get(index));
            numbers.remove(index);
            k -= index * factorial[i - 1];
        }
        
        return result.toString();
    }
}
