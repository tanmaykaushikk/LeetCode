class Solution {
    public int findMinArrowShots(int[][] points) {
        if (points == null || points.length == 0) return 0;
        
        // Sort the array based on the end point of each balloon
        Arrays.sort(points, (a, b) -> Integer.compare(a[1], b[1]));
        
        int arrows = 1;
        int end = points[0][1];
        
        // Iterate through the balloons
        for (int i = 1; i < points.length; i++) {
            // If the current balloon starts after the end point of the previous balloon, another arrow is needed
            if (points[i][0] > end) {
                arrows++;
                end = points[i][1];
            }
        }
        
        return arrows;
    }
}
