class Solution {
    public boolean canPartition(int[] nums) {
        int sum = 0;
        for(int i=0;i<nums.length;i++){
            sum = sum + nums[i];
        }
        if(sum % 2 != 0) return false;
        else{
            return subsetsum(nums,sum/2);
        }
    }

    private static boolean subsetsum(int arr[] , int k){
        boolean dp[][] = new boolean[arr.length+1][k+1];
        for(int i=0;i<=arr.length;i++){
            for(int j=0;j<=k;j++){
                if(i==0){
                    dp[i][j] = false;
                }else{
                    dp[i][j] = true;
                }
            }
        }
        for(int i=1;i<=arr.length;i++){
            for(int j=1;j<=k;j++){
                if(arr[i-1]<=j){
                    dp[i][j] = (dp[i-1][j] || dp[i-1][j-arr[i-1]]); 
                }else{
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        return dp[arr.length][k];
    }
}
